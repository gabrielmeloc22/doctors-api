{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Doctors Calendar API"
  },
  "components": {
    "schemas": {},
    "parameters": {}
  },
  "paths": {
    "/doctors/{id}/bookings": {
      "get": {
        "summary": "Returns all bookings for a doctor",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true,
            "name": "start_time",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true,
            "name": "end_time",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "bookings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "slot_id": {
                            "type": "string"
                          },
                          "patient_id": {
                            "type": "string"
                          },
                          "reason": {
                            "type": "string"
                          },
                          "time": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "slot_id",
                          "patient_id",
                          "reason",
                          "time"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "bookings"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/doctors/{id}/available_slots": {
      "get": {
        "summary": "Returns all available slots for a doctor given a data range",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true,
            "name": "start_time",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true,
            "name": "end_time",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "slots": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "time_slot": {
                              "type": "number"
                            },
                            "start_time": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "time_slot",
                            "start_time"
                          ]
                        }
                      }
                    }
                  },
                  "required": [
                    "success",
                    "slots"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/doctors": {
      "post": {
        "summary": "Creates a new doctor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 128
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "first_name": {
                    "type": "string",
                    "maxLength": 128
                  },
                  "last_name": {
                    "type": "string",
                    "maxLength": 128
                  }
                },
                "required": [
                  "username",
                  "email",
                  "first_name",
                  "last_name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Doctor created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "doctor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "first_name": {
                          "type": "string"
                        },
                        "last_name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "username",
                        "email",
                        "first_name",
                        "last_name"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "doctor"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/doctors/{id}/slots": {
      "post": {
        "summary": "Creates a new slot",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "end_time": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "duration": {
                    "anyOf": [
                      {
                        "type": "number",
                        "enum": [
                          30
                        ]
                      },
                      {
                        "type": "number",
                        "enum": [
                          15
                        ]
                      }
                    ]
                  },
                  "repeat": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "SINGLE"
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "WEEKLY"
                            ]
                          },
                          "days": {
                            "type": "array",
                            "items": {
                              "type": "number",
                              "maximum": 6
                            }
                          },
                          "end": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "type",
                          "days",
                          "end"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "DAILY"
                            ]
                          },
                          "end": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "type",
                          "end"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "start_time",
                  "end_time",
                  "duration"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Slot created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "slot": {
                      "type": "object",
                      "properties": {
                        "doctor_id": {
                          "type": "string"
                        },
                        "start_time": {
                          "type": "string"
                        },
                        "end_time": {
                          "type": "string",
                          "nullable": true
                        },
                        "duration": {
                          "type": "number"
                        },
                        "repeat": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "end": {
                              "type": "string",
                              "nullable": true
                            },
                            "days": {
                              "type": "array",
                              "nullable": true,
                              "items": {
                                "type": "number"
                              }
                            }
                          },
                          "required": [
                            "type",
                            "end",
                            "days"
                          ]
                        }
                      },
                      "required": [
                        "doctor_id",
                        "start_time",
                        "end_time",
                        "duration",
                        "repeat"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "slot"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/slots/{id}/book": {
      "post": {
        "summary": "Creates a new slot",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string"
                  },
                  "patient_id": {
                    "type": "string"
                  },
                  "start_time": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "reason",
                  "patient_id",
                  "start_time"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Slot created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "booking": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "slot_id": {
                          "type": "string"
                        },
                        "patient_id": {
                          "type": "string"
                        },
                        "reason": {
                          "type": "string"
                        },
                        "time": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "slot_id",
                        "patient_id",
                        "reason",
                        "time"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "booking"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}